version: '3.8'

x-function: &base_python
  working_dir: /app/src
  volumes:
    - ./src:/app/src:rw
    - poetry-volume:/poetry:delegated
  environment: &env-vars
    POETRY_HOME: /poetry
    PYTHONPATH: /app/src
    SECRET_KEY: ${SECRET_KEY}
    DEBUG: ${DEBUG}
    DB_HOST: ${DB_HOST}
    DB_NAME: ${DB_NAME}
    DB_USER: ${DB_USER}
    DB_PASS: ${DB_PASSWORD}
  depends_on:
    - db
    - redis
  env_file:
    - .env
  networks:
    - internal

x-celery: &base_celery
  <<: *base_python
  build:
    context: ./src
    dockerfile: web.dockerfile
  entrypoint: celery
  links:
    - redis
  restart: always

x-worker: &base_worker
  <<: *base_celery
  command: >
    -A config.celery worker -l info -P gevent

services:
  db:
    container_name: ${PROJECT_NAME}_db
    image: postgres:14.6-alpine
    volumes:
      - pg_data:/var/lib/postgresql/data/pgdata:rw
    env_file:
      - .env
    networks:
      - internal
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
      PGDATA: /var/lib/postgresql/data/pgdata

  nginx:
    build: ./nginx
    container_name: ${PROJECT_NAME}_nginx
    volumes:
      - static_dir:/app/src/static/
      - media_dir:/app/src/media/
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - internal

  web:
    <<: *base_python
    build:
      context: ./src
      dockerfile: web.dockerfile
    container_name: ${PROJECT_NAME}_web
    volumes:
      - static_dir:/app/src/static/
      - media_dir:/app/src/media/
    restart: on-failure

  redis:
    image: redis:7.0.11-alpine
    hostname: redis
    container_name: ${PROJECT_NAME}_redis
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - internal
    env_file:
      - .env
    restart: always

  worker1:
    <<: *base_worker
    hostname: worker1
    container_name: ${PROJECT_NAME}_worker1

volumes:
  static_dir:
  media_dir:
  pg_data:
  redis_data:
  poetry-volume:

networks:
  internal: